Description: fix typos
Author: Florian Schlichting <fsfs@debian.org>
Forwarded: https://rt.cpan.org/Ticket/Display.html?id=118993

--- a/ArgvFile.pm
+++ b/ArgvFile.pm
@@ -173,7 +173,7 @@
 =item Simple access to typical calling scenarios
 
 If several options need to be set, but in certain circumstances
-are always the same, it could become sligthly nerveracking to type
+are always the same, it could become slightly nerveracking to type
 them in again and again. With an option file, they can be stored
 I<once> and recalled easily as often as necessary.
 
@@ -186,7 +186,7 @@
 are a few user groups with different but typical ways to call your script.
 In all these cases, option files may collect options belonging together,
 and may be combined by the script users to set up a certain call.
-In conjunction with the possiblity to I<nest> such collections, this is
+In conjunction with the possibility to I<nest> such collections, this is
 perhaps the most powerful feature provided by this method.
 
 =item Individual and installationwide default options
@@ -294,7 +294,7 @@
 
 Except for the traditional loading, the complete interface of C<argvFile()>
 is available via C<use>, but in the typical C<use> syntax without
-parantheses.
+parentheses.
 
   # implicit call of argvFile(default=>1, home=>1)
   use Getopt::ArgvFile default=>1, home=>1;
@@ -316,7 +316,7 @@
 
 B<Basics>
 
-An option file hint is simply the filename preceeded by (at least) one
+An option file hint is simply the filename preceded by (at least) one
 "@" character:
 
   > script -optA argA -optB @optionFile -optC argC
@@ -406,25 +406,25 @@
 into @ARGV.
 
 
-B<Relative pathes>
+B<Relative paths>
 
-Pathes in option files might be relative, as in
+Paths in option files might be relative, as in
 
   -file ../file @../../configs/nested
 
 If written with the (prepared) start directory in mind, that will work,
 but it can fail when it was written relatively to the option file location
-because by default those pathes will not be resolved when written from
+because by default those paths will not be resolved when written from
 an option file.
 
 Use parameter C<resolveRelativePathes> to switch to path resolution:
 
    argvFile(resolveRelativePathes=>1);
 
-will cause C<argvFile()> to expand those pathes, both in standard strings
+will cause C<argvFile()> to expand those paths, both in standard strings
 and nested option files.
 
-   With resolveRelativePathes, both pathes
+   With resolveRelativePathes, both paths
    will be resolved:
 
    -file ../file @../../configs/nested
@@ -434,7 +434,7 @@
 
 B<Environment variables>
 
-Similar to relative pathes, environment variables are handled differently
+Similar to relative paths, environment variables are handled differently
 depending if the option is specified at the commandline or from an option
 file, due to bypassed shell processing. By default, C<argvFile()> does
 not resolve environment variables. But if required it can be commanded
@@ -453,7 +453,7 @@
 I<current option script> is searched in the current directory.
 
 By default, all startup option files are expected to be named like
-the script, preceeded by a dot, but this can be adapted to individual
+the script, preceded by a dot, but this can be adapted to individual
 needs if preferred, see below.
 
  Examples:
@@ -809,7 +809,7 @@
                     }
                  }
 
-               # resolve relative pathes, if requested
+               # resolve relative paths, if requested
                if (exists $switches{resolveRelativePathes})
                  {
                   # process all strings
@@ -931,7 +931,7 @@
 
   use Getopt::ArgvFile justload=>1;
 
-See I<FUNCTIONS> for additional informations.
+See I<FUNCTIONS> for additional information.
 
 =head1 NOTES
 
